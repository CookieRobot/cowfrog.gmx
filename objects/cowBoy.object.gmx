<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>cowboy1GunF</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = -1;
depth = -100;
//sprites
grav = .35;
collisionsIni()


dead = 0;
down = 0
forward =0;
throw =0;
toss = 0;
choice = irandom_range(1,14)
switch(choice)
{
    case 1:
        sprite_index = cowboy1
        dead = cowboy1ded
        down = cowboy1GunD
        forward =cowboy1GunF;
        throw =cowboy1GunT;
        toss = cowboy1Toss;
    break;
    case 2:
        sprite_index = cowboy2
        dead = cowboy2ded
        down = cowboy2GunD
        forward =cowboy2GunF;
        throw =cowboy2GunT;
        toss = cowboy2Toss;
    break;
    case 3:
        sprite_index = cowboy3
        dead = cowboy3ded
        down = cowboy3GunD
        forward =cowboy3GunF;
        throw =cowboy3GunT;
        toss = cowboy3Toss;
    break;
    case 4:
        sprite_index = ridaProfile
        dead = ridaDed
        down = ridaGunD
        forward =ridaGunF;
        throw =ridaGunT;
        toss = ridaToss;
    break;
    case 5:
        sprite_index = fuyukoProfile
        dead = fuyukoDed
        down = fuyukoGunD
        forward =fuyukoGunF;
        throw =fuyukoGunT;
        toss = fuyukoToss;
    break;
    case 6:
        sprite_index = suuProfile
        dead = suuDed
        down = suuGunD
        forward =suuGunF;
        throw =suuGunT;
        toss = suuToss;
    break;
    case 7:
        sprite_index = flatProfile
        dead = flatDed
        down = flatGunD
        forward =flatGunF;
        throw =flatGunT;
        toss = flatToss;
    break;
    case 8:
        sprite_index = dokiProfile
        dead = dokiDed
        down = dokiGunD
        forward =dokiGunF;
        throw =dokiGunT;
        toss = dokiToss;
    break;
    case 9:
        sprite_index = yomicProfile
        dead = yomicDed
        down = yomicGunD
        forward =yomicGunF;
        throw =yomicGunT;
        toss = yomicToss;
    break;
    case 10:
        sprite_index = hikagiProfile
        dead = hikagiDed
        down = hikagiGunD
        forward =hikagiGunF;
        throw =hikagiGunT;
        toss = hikagiToss;
    break;
    case 11:
        sprite_index = cowboyHaroProfile
        dead = cowboyHaroDed
        down = cowboyHaroGunD
        forward =cowboyHaroGunF;
        throw =cowboyHaroGunT;
        toss = cowboyHaroToss;
    break;
    case 12:
        sprite_index = lucaboyProfile
        dead = lucaboyDed
        down = lucaboyGunD
        forward =lucaboyGunF;
        throw =lucaboyGunT;
        toss = lucaboyToss;
    break;
    case 13:
        sprite_index = rdeinProfile
        dead = rdeinDed
        down = rdeinGunD
        forward =rdeinGunF;
        throw =rdeinGunT;
        toss = rdeinToss;
    break;
    case 14:
        sprite_index = aliceProfile
        dead = aliceDed
        down = aliceGunD
        forward =aliceGunF;
        throw =aliceGunT;
        toss = aliceToss;
    break;

}
xVelo = 0;
yVelo = 0;
ded = 0;
facing = -1;
play = instance_find(player,0);
grounded = true;
//shooting
//play = instance_find(player,0);
nextShot = (room_speed*3)-(global.town);
if nextShot &lt;room_speed/2
{
    nextShot = room_speed/2
}
event_user(0);
alarm[0] = room_speed;
bulletVelo = 1.5 +(global.town*.2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//gravity 
//air 
if (!grounded)
{
    image_index = 1;
}
yVelo+=grav;

if (ded!=0)
{
    sprite_index = dead;
    xVelo = ded
    if (grounded)
    {
    xVelo = 0;
    }
    
        if ded &lt;0 
        {
            image_angle = 90
        }
        else
        {
            image_angle = 270
        }
   
    
}
else
{

    facing = sign(play.x-x)
    {
    image_xscale = facing;
    }
}
collisionsStep();
//x bounds
if x&lt;32
{
x= 32
}
if x&gt;1900
{
x = 1900
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="playerAttack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ded  !=0
{
exit;
}
grav = .35

global.bounty+=irandom_range(50,100);
if other.x&gt;x
{
image_angle = image_angle+45

ded = -2;
}
else
{
image_angle = image_angle-45 

ded = 2; 
}

yVelo = -4;
alarm[0] = room_speed *5;
part_particles_create(global.bloodSystem, other.x, other.y, global.blood, 15);
instance_destroy(other);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
