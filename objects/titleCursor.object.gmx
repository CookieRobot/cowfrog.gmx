<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>cursorsprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


inputBooleans();


   
   
controlSetup = false;
//draw_set_font(font2)
draw_set_colour(c_white);
draw_set_halign(fa_left);
control = instance_find(controller,0);
if control == noone
{
control = instance_create(0,0,controller);
control.persistent = true;
}

set = instance_find(settings,0);
if set == noone
{

set = instance_create(0,0,settings);
set.persistent = true;
}
//start music
setBGM(pardner);

control.target = self;


settingControls = false;
lastPressed = 0;
setControlsID = 0;
setControlsText[0] ="Press Y to change controls or Backspace to return to game";

setControlsText[1] ="Input Button for Jump";
setControlsText[2] ="Input Button for Attack";
setControlsText[3] ="Input Button for Pause";


setControlsText[4] ="Input Button for Up";
setControlsText[5] ="Input Button for Down";
setControlsText[6] ="Input Button for Left";
setControlsText[7] ="Input Button for Right";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if(settingControls&amp;&amp;!gamepad_button_check(0,lastPressed))
{

for (i=gp_face1; i&lt;gp_axisrv; i++)
    {
    if gamepad_button_check_pressed(0, i)
        {
             switch(setControlsID)
            {
        case 1:
        control.gpjump = i;
        lastPressed = i;
        setControlsID+=1;
        break;
        case 2:
        control.gpfire = i;
        lastPressed = i;
        setControlsID+=1;
        break;
        case 3:
        control.gppause = i;
        lastPressed = i;
        setControlsID+=1;
        break;
        
        case 4:
        control.gpup = i;
        lastPressed = i;
        setControlsID+=1;
        break;
        case 5:
        control.gpdown = i;
        lastPressed = i;
        setControlsID+=1;
        break;
        case 6:
        control.gpleft = i;
        lastPressed = i;
        setControlsID+=1;
        break;
        case 7:
        control.gpright = i;
        lastPressed = i;
        //setControlsID+=1;
        settingControls = false;
        break;
        
        
            }
        
        
        break;
        }
    }
    

    exit;
}


if pressUpChange{y=96}
if pressDownChange{y=128}
if(pressConfirmChange&amp;&amp; y &lt; 100)
{
    room_goto(game);
}
else if pressConfirmChange
{
    
    
    //settingControls = true
    //setControlsID=1;
    room_goto(optionsRoom)
    exit;
//config
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if settingControls
{

draw_text(32,144,setControlsText[setControlsID]);
}
else
{
draw_self();
draw_text(32,96,"START");
draw_text(32,128,"OPTIONS");
//draw_text_transformed(32,96,"START",1/5,1/5,0);
//draw_text_transformed(32,128,"OPTIONS",1/5,1/5,0);
//draw_text(0,-2,"Use Jump (default A) and arrow keys");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(settingControls)
{
    switch(setControlsID)
    {
        case 1:
        control.jump = keyboard_lastkey;
        setControlsID+=1;
        break;
        case 2:
        control.fire = keyboard_lastkey;
        setControlsID+=1;
        break;
        case 3:
        control.pause = keyboard_lastkey;
        setControlsID+=1;
        break;
        
        case 4:
        control.up = keyboard_lastkey;
        setControlsID+=1;
        break;
        case 5:
        control.down = keyboard_lastkey;
        setControlsID+=1;
        break;
        case 6:
        control.left = keyboard_lastkey;
        setControlsID+=1;
        break;
        case 7:
        control.right = keyboard_lastkey;
        //setControlsID+=1;
        settingControls = false;
        break;
        
        
    }


}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
