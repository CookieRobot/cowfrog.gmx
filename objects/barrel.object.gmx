<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spriteBarrel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 3;
hit = 0;
broken = false;
canBreak = true;
depth = -900;
t = irandom_range(0,99)
trap = false;
ambush = false;

if (t&lt;20+global.town*.5)

{
    t = irandom_range(0,99);
    if (t &lt;20)
    {
        trap = true;
    }
    else
    {
    ambush = true;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_particles_create(global.woodChunk1System, other.x, other.y, global.woodChunk1, irandom_range(2,6));
part_particles_create(global.woodChunk2System, other.x, other.y, global.woodChunk2, irandom_range(2,6));

if (ambush)
{
    t = irandom_range(0,99);
    if (t&lt;20)
    {
    var a = instance_create(x,y,bigYomic);
    a.sprite_index = yomicJump;
    a.image_index = 5
    a.yVelo = -4;
    }
    else
    {
    var a = instance_create(x,y-16,jumpBoy);
    a.yVelo = -4;
    }
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (broken)
{
    catchPlayer = collision_rectangle( x-17, y-14, x+19, y+24, player, false, false );
    catchCowboy = collision_rectangle( x-17, y-14, x+19, y+24, cowBoy, false, false );
    if(catchPlayer!=noone)
    {
        if (catchPlayer.ded !=0)
        {
            instance_destroy(self);
        }

    }
    if(catchCowboy!=noone)
    {
     if (catchCowboy.ded !=0)
     {
           instance_destroy(self);
        }

    }
    exit;
}
if(!trap)
{
exit;
}
catchPlayer = collision_rectangle( x, y-26, x, y, player, false, false );
catchCowboy = collision_rectangle( x, y-26, x, y, cowBoy, false, false );

if (catchPlayer!=noone)
{
//push player into barrel
catchPlayer.stun = true;
catchPlayer.alarm[1] = room_speed*.5;
//catchPlayer.x = x;
catchPlayer.xVelo = sign(x-catchPlayer.x);
//catchPlayer.y+=4
broken = true
sprite_index = barrelBrokenSprite;
mask_index = brokenBarrelCollision;
part_particles_create(global.woodChunk1System, other.x, other.y, global.woodChunk1, irandom_range(1,3));
part_particles_create(global.woodChunk2System, other.x, other.y, global.woodChunk2, irandom_range(1,3));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="explosion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(self);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="playerAttack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp-=1;
hit = room_speed*.5;
instance_destroy(other)
audio_play_sound(damageEnemy1,0,false);
if(hp &lt;1)
{
    instance_destroy(self);
    
}
else
{
hit = room_speed*.5;
part_particles_create(global.woodchipSystem, other.x, other.y, global.woodchip, irandom_range(1,3));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hit&gt;0)
{
shake = hit%2
    if (shake ==0)
    {
    shake = -1
    }
hit-=1;
    if(broken)
    {
        draw_sprite(barrelBrokenSprite,0,x+shake,y)
    }
    else
    {
        draw_sprite(spriteBarrel,0,x+shake,y)
    }

}
else
{
draw_self()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
